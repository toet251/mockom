// Code generated by protoc-gen-validate. DO NOT EDIT.
// source: proto/orders/v3/capturing_service.proto

package orders

import (
	"bytes"
	"errors"
	"fmt"
	"net"
	"net/mail"
	"net/url"
	"regexp"
	"strings"
	"time"
	"unicode/utf8"

	"github.com/golang/protobuf/ptypes"
)

// ensure the imports are used
var (
	_ = bytes.MinRead
	_ = errors.New("")
	_ = fmt.Print
	_ = utf8.UTFMax
	_ = (*regexp.Regexp)(nil)
	_ = (*strings.Reader)(nil)
	_ = net.IPv4len
	_ = time.Duration(0)
	_ = (*url.URL)(nil)
	_ = (*mail.Address)(nil)
	_ = ptypes.DynamicAny{}
)

// define the regex for a UUID once up-front
var _capturing_service_uuidPattern = regexp.MustCompile("^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$")

// Validate checks the field values on CaptureInternalOrderRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CaptureInternalOrderRequest) Validate() error {
	if m == nil {
		return nil
	}

	if v, ok := interface{}(m.GetCustomer()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return CaptureInternalOrderRequestValidationError{
				field:  "Customer",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if len(m.GetItems()) < 1 {
		return CaptureInternalOrderRequestValidationError{
			field:  "Items",
			reason: "value must contain at least 1 item(s)",
		}
	}

	for idx, item := range m.GetItems() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return CaptureInternalOrderRequestValidationError{
					field:  fmt.Sprintf("Items[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	if v, ok := interface{}(m.GetBillingInfo()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return CaptureInternalOrderRequestValidationError{
				field:  "BillingInfo",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if v, ok := interface{}(m.GetShippingInfo()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return CaptureInternalOrderRequestValidationError{
				field:  "ShippingInfo",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if utf8.RuneCountInString(m.GetNote()) > 255 {
		return CaptureInternalOrderRequestValidationError{
			field:  "Note",
			reason: "value length must be at most 255 runes",
		}
	}

	// no validation rules for GrandTotal

	if utf8.RuneCountInString(m.GetPartnerRefCode()) > 50 {
		return CaptureInternalOrderRequestValidationError{
			field:  "PartnerRefCode",
			reason: "value length must be at most 50 runes",
		}
	}

	if utf8.RuneCountInString(m.GetRefCode()) > 50 {
		return CaptureInternalOrderRequestValidationError{
			field:  "RefCode",
			reason: "value length must be at most 50 runes",
		}
	}

	if l := utf8.RuneCountInString(m.GetTerminalCode()); l < 1 || l > 50 {
		return CaptureInternalOrderRequestValidationError{
			field:  "TerminalCode",
			reason: "value length must be between 1 and 50 runes, inclusive",
		}
	}

	for idx, item := range m.GetPromotions() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return CaptureInternalOrderRequestValidationError{
					field:  fmt.Sprintf("Promotions[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	if v, ok := interface{}(m.GetLoyalty()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return CaptureInternalOrderRequestValidationError{
				field:  "Loyalty",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if v, ok := interface{}(m.GetCodPayment()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return CaptureInternalOrderRequestValidationError{
				field:  "CodPayment",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if _, ok := _CaptureInternalOrderRequest_DeliveryType_NotInLookup[m.GetDeliveryType()]; ok {
		return CaptureInternalOrderRequestValidationError{
			field:  "DeliveryType",
			reason: "value must not be in list [0]",
		}
	}

	if _, ok := DeliveryType_name[int32(m.GetDeliveryType())]; !ok {
		return CaptureInternalOrderRequestValidationError{
			field:  "DeliveryType",
			reason: "value must be one of the defined enum values",
		}
	}

	return nil
}

// CaptureInternalOrderRequestValidationError is the validation error returned
// by CaptureInternalOrderRequest.Validate if the designated constraints
// aren't met.
type CaptureInternalOrderRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CaptureInternalOrderRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CaptureInternalOrderRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CaptureInternalOrderRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CaptureInternalOrderRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CaptureInternalOrderRequestValidationError) ErrorName() string {
	return "CaptureInternalOrderRequestValidationError"
}

// Error satisfies the builtin error interface
func (e CaptureInternalOrderRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCaptureInternalOrderRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CaptureInternalOrderRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CaptureInternalOrderRequestValidationError{}

var _CaptureInternalOrderRequest_DeliveryType_NotInLookup = map[DeliveryType]struct{}{
	0: {},
}

// Validate checks the field values on CaptureInternalOrderFromCartRequest with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *CaptureInternalOrderFromCartRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for CustomerId

	// no validation rules for PlatformId

	// no validation rules for SellerId

	if len(m.GetItems()) < 1 {
		return CaptureInternalOrderFromCartRequestValidationError{
			field:  "Items",
			reason: "value must contain at least 1 item(s)",
		}
	}

	for idx, item := range m.GetItems() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return CaptureInternalOrderFromCartRequestValidationError{
					field:  fmt.Sprintf("Items[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	// no validation rules for Coupons

	// no validation rules for GiftCardId

	// no validation rules for ShippingAddressId

	// no validation rules for PaymentMethodId

	return nil
}

// CaptureInternalOrderFromCartRequestValidationError is the validation error
// returned by CaptureInternalOrderFromCartRequest.Validate if the designated
// constraints aren't met.
type CaptureInternalOrderFromCartRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CaptureInternalOrderFromCartRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CaptureInternalOrderFromCartRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CaptureInternalOrderFromCartRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CaptureInternalOrderFromCartRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CaptureInternalOrderFromCartRequestValidationError) ErrorName() string {
	return "CaptureInternalOrderFromCartRequestValidationError"
}

// Error satisfies the builtin error interface
func (e CaptureInternalOrderFromCartRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCaptureInternalOrderFromCartRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CaptureInternalOrderFromCartRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CaptureInternalOrderFromCartRequestValidationError{}

// Validate checks the field values on RecordInternalPaymentIPNRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *RecordInternalPaymentIPNRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for TerminalCode

	// no validation rules for MethodCode

	// no validation rules for PartnerCode

	// no validation rules for OrderCode

	// no validation rules for Amount

	// no validation rules for TransactionCode

	// no validation rules for ResponseCode

	// no validation rules for ResponseMessage

	// no validation rules for PartnerTransactionCode

	// no validation rules for Checksum

	return nil
}

// RecordInternalPaymentIPNRequestValidationError is the validation error
// returned by RecordInternalPaymentIPNRequest.Validate if the designated
// constraints aren't met.
type RecordInternalPaymentIPNRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e RecordInternalPaymentIPNRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e RecordInternalPaymentIPNRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e RecordInternalPaymentIPNRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e RecordInternalPaymentIPNRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e RecordInternalPaymentIPNRequestValidationError) ErrorName() string {
	return "RecordInternalPaymentIPNRequestValidationError"
}

// Error satisfies the builtin error interface
func (e RecordInternalPaymentIPNRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sRecordInternalPaymentIPNRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = RecordInternalPaymentIPNRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = RecordInternalPaymentIPNRequestValidationError{}

// Validate checks the field values on ChangeInternalCODPaymentRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ChangeInternalCODPaymentRequest) Validate() error {
	if m == nil {
		return nil
	}

	if l := utf8.RuneCountInString(m.GetOrderCode()); l < 1 || l > 20 {
		return ChangeInternalCODPaymentRequestValidationError{
			field:  "OrderCode",
			reason: "value length must be between 1 and 20 runes, inclusive",
		}
	}

	if v, ok := interface{}(m.GetCodPayment()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return ChangeInternalCODPaymentRequestValidationError{
				field:  "CodPayment",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// ChangeInternalCODPaymentRequestValidationError is the validation error
// returned by ChangeInternalCODPaymentRequest.Validate if the designated
// constraints aren't met.
type ChangeInternalCODPaymentRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ChangeInternalCODPaymentRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ChangeInternalCODPaymentRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ChangeInternalCODPaymentRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ChangeInternalCODPaymentRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ChangeInternalCODPaymentRequestValidationError) ErrorName() string {
	return "ChangeInternalCODPaymentRequestValidationError"
}

// Error satisfies the builtin error interface
func (e ChangeInternalCODPaymentRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sChangeInternalCODPaymentRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ChangeInternalCODPaymentRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ChangeInternalCODPaymentRequestValidationError{}

// Validate checks the field values on GetInternalOrderByCodeRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetInternalOrderByCodeRequest) Validate() error {
	if m == nil {
		return nil
	}

	if l := utf8.RuneCountInString(m.GetOrderCode()); l < 1 || l > 20 {
		return GetInternalOrderByCodeRequestValidationError{
			field:  "OrderCode",
			reason: "value length must be between 1 and 20 runes, inclusive",
		}
	}

	return nil
}

// GetInternalOrderByCodeRequestValidationError is the validation error
// returned by GetInternalOrderByCodeRequest.Validate if the designated
// constraints aren't met.
type GetInternalOrderByCodeRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetInternalOrderByCodeRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetInternalOrderByCodeRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetInternalOrderByCodeRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetInternalOrderByCodeRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetInternalOrderByCodeRequestValidationError) ErrorName() string {
	return "GetInternalOrderByCodeRequestValidationError"
}

// Error satisfies the builtin error interface
func (e GetInternalOrderByCodeRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetInternalOrderByCodeRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetInternalOrderByCodeRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetInternalOrderByCodeRequestValidationError{}

// Validate checks the field values on CancelInternalOrderRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CancelInternalOrderRequest) Validate() error {
	if m == nil {
		return nil
	}

	if l := utf8.RuneCountInString(m.GetOrderCode()); l < 1 || l > 20 {
		return CancelInternalOrderRequestValidationError{
			field:  "OrderCode",
			reason: "value length must be between 1 and 20 runes, inclusive",
		}
	}

	// no validation rules for Reason

	return nil
}

// CancelInternalOrderRequestValidationError is the validation error returned
// by CancelInternalOrderRequest.Validate if the designated constraints aren't met.
type CancelInternalOrderRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CancelInternalOrderRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CancelInternalOrderRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CancelInternalOrderRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CancelInternalOrderRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CancelInternalOrderRequestValidationError) ErrorName() string {
	return "CancelInternalOrderRequestValidationError"
}

// Error satisfies the builtin error interface
func (e CancelInternalOrderRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCancelInternalOrderRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CancelInternalOrderRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CancelInternalOrderRequestValidationError{}

// Validate checks the field values on ListInternalOrdersRequest with the rules
// defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ListInternalOrdersRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for StateIn

	// no validation rules for Offset

	// no validation rules for Limit

	return nil
}

// ListInternalOrdersRequestValidationError is the validation error returned by
// ListInternalOrdersRequest.Validate if the designated constraints aren't met.
type ListInternalOrdersRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ListInternalOrdersRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ListInternalOrdersRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ListInternalOrdersRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ListInternalOrdersRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ListInternalOrdersRequestValidationError) ErrorName() string {
	return "ListInternalOrdersRequestValidationError"
}

// Error satisfies the builtin error interface
func (e ListInternalOrdersRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sListInternalOrdersRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ListInternalOrdersRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ListInternalOrdersRequestValidationError{}

// Validate checks the field values on ScheduleInternalOrderCommandRequest with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *ScheduleInternalOrderCommandRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for OrderId

	// no validation rules for ExecutedAt

	// no validation rules for Type

	return nil
}

// ScheduleInternalOrderCommandRequestValidationError is the validation error
// returned by ScheduleInternalOrderCommandRequest.Validate if the designated
// constraints aren't met.
type ScheduleInternalOrderCommandRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ScheduleInternalOrderCommandRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ScheduleInternalOrderCommandRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ScheduleInternalOrderCommandRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ScheduleInternalOrderCommandRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ScheduleInternalOrderCommandRequestValidationError) ErrorName() string {
	return "ScheduleInternalOrderCommandRequestValidationError"
}

// Error satisfies the builtin error interface
func (e ScheduleInternalOrderCommandRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sScheduleInternalOrderCommandRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ScheduleInternalOrderCommandRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ScheduleInternalOrderCommandRequestValidationError{}

// Validate checks the field values on CaptureInternalOrderResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CaptureInternalOrderResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Id

	// no validation rules for Code

	// no validation rules for State

	// no validation rules for GrandTotal

	// no validation rules for ExpiredAt

	return nil
}

// CaptureInternalOrderResponseValidationError is the validation error returned
// by CaptureInternalOrderResponse.Validate if the designated constraints
// aren't met.
type CaptureInternalOrderResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CaptureInternalOrderResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CaptureInternalOrderResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CaptureInternalOrderResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CaptureInternalOrderResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CaptureInternalOrderResponseValidationError) ErrorName() string {
	return "CaptureInternalOrderResponseValidationError"
}

// Error satisfies the builtin error interface
func (e CaptureInternalOrderResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCaptureInternalOrderResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CaptureInternalOrderResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CaptureInternalOrderResponseValidationError{}

// Validate checks the field values on RecordInternalPaymentIPNResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *RecordInternalPaymentIPNResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	// no validation rules for Message

	// no validation rules for TraceId

	return nil
}

// RecordInternalPaymentIPNResponseValidationError is the validation error
// returned by RecordInternalPaymentIPNResponse.Validate if the designated
// constraints aren't met.
type RecordInternalPaymentIPNResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e RecordInternalPaymentIPNResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e RecordInternalPaymentIPNResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e RecordInternalPaymentIPNResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e RecordInternalPaymentIPNResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e RecordInternalPaymentIPNResponseValidationError) ErrorName() string {
	return "RecordInternalPaymentIPNResponseValidationError"
}

// Error satisfies the builtin error interface
func (e RecordInternalPaymentIPNResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sRecordInternalPaymentIPNResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = RecordInternalPaymentIPNResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = RecordInternalPaymentIPNResponseValidationError{}

// Validate checks the field values on GetInternalOrderByCodeResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *GetInternalOrderByCodeResponse) Validate() error {
	if m == nil {
		return nil
	}

	if v, ok := interface{}(m.GetCustomer()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return GetInternalOrderByCodeResponseValidationError{
				field:  "Customer",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	for idx, item := range m.GetItems() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return GetInternalOrderByCodeResponseValidationError{
					field:  fmt.Sprintf("Items[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	// no validation rules for Note

	if v, ok := interface{}(m.GetBillingInfo()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return GetInternalOrderByCodeResponseValidationError{
				field:  "BillingInfo",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	if v, ok := interface{}(m.GetShippingInfo()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return GetInternalOrderByCodeResponseValidationError{
				field:  "ShippingInfo",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	// no validation rules for GrandTotal

	// no validation rules for RefCode

	// no validation rules for PartnerRefCode

	// no validation rules for TerminalCode

	for idx, item := range m.GetPayments() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return GetInternalOrderByCodeResponseValidationError{
					field:  fmt.Sprintf("Payments[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	// no validation rules for Status

	// no validation rules for DeliveryType

	// no validation rules for PromotionDiscount

	// no validation rules for PromotionTransactionId

	return nil
}

// GetInternalOrderByCodeResponseValidationError is the validation error
// returned by GetInternalOrderByCodeResponse.Validate if the designated
// constraints aren't met.
type GetInternalOrderByCodeResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e GetInternalOrderByCodeResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e GetInternalOrderByCodeResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e GetInternalOrderByCodeResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e GetInternalOrderByCodeResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e GetInternalOrderByCodeResponseValidationError) ErrorName() string {
	return "GetInternalOrderByCodeResponseValidationError"
}

// Error satisfies the builtin error interface
func (e GetInternalOrderByCodeResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sGetInternalOrderByCodeResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = GetInternalOrderByCodeResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = GetInternalOrderByCodeResponseValidationError{}

// Validate checks the field values on ScheduleInternalOrderCommandResponse
// with the rules defined in the proto definition for this message. If any
// rules are violated, an error is returned.
func (m *ScheduleInternalOrderCommandResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	// no validation rules for Message

	return nil
}

// ScheduleInternalOrderCommandResponseValidationError is the validation error
// returned by ScheduleInternalOrderCommandResponse.Validate if the designated
// constraints aren't met.
type ScheduleInternalOrderCommandResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ScheduleInternalOrderCommandResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ScheduleInternalOrderCommandResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ScheduleInternalOrderCommandResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ScheduleInternalOrderCommandResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ScheduleInternalOrderCommandResponseValidationError) ErrorName() string {
	return "ScheduleInternalOrderCommandResponseValidationError"
}

// Error satisfies the builtin error interface
func (e ScheduleInternalOrderCommandResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sScheduleInternalOrderCommandResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ScheduleInternalOrderCommandResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ScheduleInternalOrderCommandResponseValidationError{}

// Validate checks the field values on ChangeInternalCODPaymentResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *ChangeInternalCODPaymentResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	// no validation rules for Message

	return nil
}

// ChangeInternalCODPaymentResponseValidationError is the validation error
// returned by ChangeInternalCODPaymentResponse.Validate if the designated
// constraints aren't met.
type ChangeInternalCODPaymentResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ChangeInternalCODPaymentResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ChangeInternalCODPaymentResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ChangeInternalCODPaymentResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ChangeInternalCODPaymentResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ChangeInternalCODPaymentResponseValidationError) ErrorName() string {
	return "ChangeInternalCODPaymentResponseValidationError"
}

// Error satisfies the builtin error interface
func (e ChangeInternalCODPaymentResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sChangeInternalCODPaymentResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ChangeInternalCODPaymentResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ChangeInternalCODPaymentResponseValidationError{}

// Validate checks the field values on CancelInternalOrderResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CancelInternalOrderResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	// no validation rules for Message

	return nil
}

// CancelInternalOrderResponseValidationError is the validation error returned
// by CancelInternalOrderResponse.Validate if the designated constraints
// aren't met.
type CancelInternalOrderResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CancelInternalOrderResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CancelInternalOrderResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CancelInternalOrderResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CancelInternalOrderResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CancelInternalOrderResponseValidationError) ErrorName() string {
	return "CancelInternalOrderResponseValidationError"
}

// Error satisfies the builtin error interface
func (e CancelInternalOrderResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCancelInternalOrderResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CancelInternalOrderResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CancelInternalOrderResponseValidationError{}

// Validate checks the field values on ListInternalOrdersResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *ListInternalOrdersResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Total

	// no validation rules for Limit

	// no validation rules for Offset

	for idx, item := range m.GetOrders() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return ListInternalOrdersResponseValidationError{
					field:  fmt.Sprintf("Orders[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	return nil
}

// ListInternalOrdersResponseValidationError is the validation error returned
// by ListInternalOrdersResponse.Validate if the designated constraints aren't met.
type ListInternalOrdersResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e ListInternalOrdersResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e ListInternalOrdersResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e ListInternalOrdersResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e ListInternalOrdersResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e ListInternalOrdersResponseValidationError) ErrorName() string {
	return "ListInternalOrdersResponseValidationError"
}

// Error satisfies the builtin error interface
func (e ListInternalOrdersResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sListInternalOrdersResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = ListInternalOrdersResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = ListInternalOrdersResponseValidationError{}

// Validate checks the field values on Loyalty with the rules defined in the
// proto definition for this message. If any rules are violated, an error is returned.
func (m *Loyalty) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Amount

	// no validation rules for Point

	return nil
}

// LoyaltyValidationError is the validation error returned by Loyalty.Validate
// if the designated constraints aren't met.
type LoyaltyValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e LoyaltyValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e LoyaltyValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e LoyaltyValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e LoyaltyValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e LoyaltyValidationError) ErrorName() string { return "LoyaltyValidationError" }

// Error satisfies the builtin error interface
func (e LoyaltyValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sLoyalty.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = LoyaltyValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = LoyaltyValidationError{}

// Validate checks the field values on CODPayment with the rules defined in the
// proto definition for this message. If any rules are violated, an error is returned.
func (m *CODPayment) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Amount

	return nil
}

// CODPaymentValidationError is the validation error returned by
// CODPayment.Validate if the designated constraints aren't met.
type CODPaymentValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CODPaymentValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CODPaymentValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CODPaymentValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CODPaymentValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CODPaymentValidationError) ErrorName() string { return "CODPaymentValidationError" }

// Error satisfies the builtin error interface
func (e CODPaymentValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCODPayment.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CODPaymentValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CODPaymentValidationError{}

// Validate checks the field values on CaptureInternalOrderFromCartResponse
// with the rules defined in the proto definition for this message. If any
// rules are violated, an error is returned.
func (m *CaptureInternalOrderFromCartResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	// no validation rules for Message

	return nil
}

// CaptureInternalOrderFromCartResponseValidationError is the validation error
// returned by CaptureInternalOrderFromCartResponse.Validate if the designated
// constraints aren't met.
type CaptureInternalOrderFromCartResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CaptureInternalOrderFromCartResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CaptureInternalOrderFromCartResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CaptureInternalOrderFromCartResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CaptureInternalOrderFromCartResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CaptureInternalOrderFromCartResponseValidationError) ErrorName() string {
	return "CaptureInternalOrderFromCartResponseValidationError"
}

// Error satisfies the builtin error interface
func (e CaptureInternalOrderFromCartResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCaptureInternalOrderFromCartResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CaptureInternalOrderFromCartResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CaptureInternalOrderFromCartResponseValidationError{}

// Validate checks the field values on CreateInternalOrderRequest with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CreateInternalOrderRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for CustomerId

	// no validation rules for BillingInfoId

	// no validation rules for ShippingInfoId

	for idx, item := range m.GetServiceFee() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return CreateInternalOrderRequestValidationError{
					field:  fmt.Sprintf("ServiceFee[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	if len(m.GetItems()) < 1 {
		return CreateInternalOrderRequestValidationError{
			field:  "Items",
			reason: "value must contain at least 1 item(s)",
		}
	}

	for idx, item := range m.GetItems() {
		_, _ = idx, item

		if v, ok := interface{}(item).(interface{ Validate() error }); ok {
			if err := v.Validate(); err != nil {
				return CreateInternalOrderRequestValidationError{
					field:  fmt.Sprintf("Items[%v]", idx),
					reason: "embedded message failed validation",
					cause:  err,
				}
			}
		}

	}

	if l := utf8.RuneCountInString(m.GetTerminalCode()); l < 1 || l > 50 {
		return CreateInternalOrderRequestValidationError{
			field:  "TerminalCode",
			reason: "value length must be between 1 and 50 runes, inclusive",
		}
	}

	if utf8.RuneCountInString(m.GetNote()) > 255 {
		return CreateInternalOrderRequestValidationError{
			field:  "Note",
			reason: "value length must be at most 255 runes",
		}
	}

	// no validation rules for ReservationId

	// no validation rules for PromotionTransactionId

	return nil
}

// CreateInternalOrderRequestValidationError is the validation error returned
// by CreateInternalOrderRequest.Validate if the designated constraints aren't met.
type CreateInternalOrderRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CreateInternalOrderRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CreateInternalOrderRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CreateInternalOrderRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CreateInternalOrderRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CreateInternalOrderRequestValidationError) ErrorName() string {
	return "CreateInternalOrderRequestValidationError"
}

// Error satisfies the builtin error interface
func (e CreateInternalOrderRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCreateInternalOrderRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CreateInternalOrderRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CreateInternalOrderRequestValidationError{}

// Validate checks the field values on CreateInternalOrderResponse with the
// rules defined in the proto definition for this message. If any rules are
// violated, an error is returned.
func (m *CreateInternalOrderResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Id

	// no validation rules for Code

	// no validation rules for State

	// no validation rules for GrandTotal

	// no validation rules for ExpiredAt

	return nil
}

// CreateInternalOrderResponseValidationError is the validation error returned
// by CreateInternalOrderResponse.Validate if the designated constraints
// aren't met.
type CreateInternalOrderResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e CreateInternalOrderResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e CreateInternalOrderResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e CreateInternalOrderResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e CreateInternalOrderResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e CreateInternalOrderResponseValidationError) ErrorName() string {
	return "CreateInternalOrderResponseValidationError"
}

// Error satisfies the builtin error interface
func (e CreateInternalOrderResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sCreateInternalOrderResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = CreateInternalOrderResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = CreateInternalOrderResponseValidationError{}

// Validate checks the field values on UpdateInternalBillingInfoRequest with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *UpdateInternalBillingInfoRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	if v, ok := interface{}(m.GetBillingInfo()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return UpdateInternalBillingInfoRequestValidationError{
				field:  "BillingInfo",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// UpdateInternalBillingInfoRequestValidationError is the validation error
// returned by UpdateInternalBillingInfoRequest.Validate if the designated
// constraints aren't met.
type UpdateInternalBillingInfoRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e UpdateInternalBillingInfoRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e UpdateInternalBillingInfoRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e UpdateInternalBillingInfoRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e UpdateInternalBillingInfoRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e UpdateInternalBillingInfoRequestValidationError) ErrorName() string {
	return "UpdateInternalBillingInfoRequestValidationError"
}

// Error satisfies the builtin error interface
func (e UpdateInternalBillingInfoRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sUpdateInternalBillingInfoRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = UpdateInternalBillingInfoRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = UpdateInternalBillingInfoRequestValidationError{}

// Validate checks the field values on UpdateInternalBillingInfoResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *UpdateInternalBillingInfoResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	// no validation rules for Message

	return nil
}

// UpdateInternalBillingInfoResponseValidationError is the validation error
// returned by UpdateInternalBillingInfoResponse.Validate if the designated
// constraints aren't met.
type UpdateInternalBillingInfoResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e UpdateInternalBillingInfoResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e UpdateInternalBillingInfoResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e UpdateInternalBillingInfoResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e UpdateInternalBillingInfoResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e UpdateInternalBillingInfoResponseValidationError) ErrorName() string {
	return "UpdateInternalBillingInfoResponseValidationError"
}

// Error satisfies the builtin error interface
func (e UpdateInternalBillingInfoResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sUpdateInternalBillingInfoResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = UpdateInternalBillingInfoResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = UpdateInternalBillingInfoResponseValidationError{}

// Validate checks the field values on UpdateInternalShippingInfoRequest with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *UpdateInternalShippingInfoRequest) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	if v, ok := interface{}(m.GetShippingInfo()).(interface{ Validate() error }); ok {
		if err := v.Validate(); err != nil {
			return UpdateInternalShippingInfoRequestValidationError{
				field:  "ShippingInfo",
				reason: "embedded message failed validation",
				cause:  err,
			}
		}
	}

	return nil
}

// UpdateInternalShippingInfoRequestValidationError is the validation error
// returned by UpdateInternalShippingInfoRequest.Validate if the designated
// constraints aren't met.
type UpdateInternalShippingInfoRequestValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e UpdateInternalShippingInfoRequestValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e UpdateInternalShippingInfoRequestValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e UpdateInternalShippingInfoRequestValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e UpdateInternalShippingInfoRequestValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e UpdateInternalShippingInfoRequestValidationError) ErrorName() string {
	return "UpdateInternalShippingInfoRequestValidationError"
}

// Error satisfies the builtin error interface
func (e UpdateInternalShippingInfoRequestValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sUpdateInternalShippingInfoRequest.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = UpdateInternalShippingInfoRequestValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = UpdateInternalShippingInfoRequestValidationError{}

// Validate checks the field values on UpdateInternalShippingInfoResponse with
// the rules defined in the proto definition for this message. If any rules
// are violated, an error is returned.
func (m *UpdateInternalShippingInfoResponse) Validate() error {
	if m == nil {
		return nil
	}

	// no validation rules for Code

	// no validation rules for Message

	return nil
}

// UpdateInternalShippingInfoResponseValidationError is the validation error
// returned by UpdateInternalShippingInfoResponse.Validate if the designated
// constraints aren't met.
type UpdateInternalShippingInfoResponseValidationError struct {
	field  string
	reason string
	cause  error
	key    bool
}

// Field function returns field value.
func (e UpdateInternalShippingInfoResponseValidationError) Field() string { return e.field }

// Reason function returns reason value.
func (e UpdateInternalShippingInfoResponseValidationError) Reason() string { return e.reason }

// Cause function returns cause value.
func (e UpdateInternalShippingInfoResponseValidationError) Cause() error { return e.cause }

// Key function returns key value.
func (e UpdateInternalShippingInfoResponseValidationError) Key() bool { return e.key }

// ErrorName returns error name.
func (e UpdateInternalShippingInfoResponseValidationError) ErrorName() string {
	return "UpdateInternalShippingInfoResponseValidationError"
}

// Error satisfies the builtin error interface
func (e UpdateInternalShippingInfoResponseValidationError) Error() string {
	cause := ""
	if e.cause != nil {
		cause = fmt.Sprintf(" | caused by: %v", e.cause)
	}

	key := ""
	if e.key {
		key = "key for "
	}

	return fmt.Sprintf(
		"invalid %sUpdateInternalShippingInfoResponse.%s: %s%s",
		key,
		e.field,
		e.reason,
		cause)
}

var _ error = UpdateInternalShippingInfoResponseValidationError{}

var _ interface {
	Field() string
	Reason() string
	Key() bool
	Cause() error
	ErrorName() string
} = UpdateInternalShippingInfoResponseValidationError{}
